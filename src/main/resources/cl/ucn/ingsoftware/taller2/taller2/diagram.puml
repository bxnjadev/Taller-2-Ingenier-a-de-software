@startuml
skin rose

package cl.ucn.ingsoftware.taller2.taller2 {
    class MainApplication {
      +start(Stage stage): void
      +{static} main(String[] args): void
    }
    MainApplication ..> cl.ucn.ingsoftware.taller2.taller2.loader
    MainApplication ..> cl.ucn.ingsoftware.taller2.taller2.service
    MainApplication ..> cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    class Application
    MainApplication --|> Application
}

package cl.ucn.ingsoftware.taller2.taller2.adapter {
    interface JsonSerializer

    class CredentialsAdapter {
        +serialize(Credentials credentials, Type type, JsonSerializationContext jsonSerializationContext): JsonElement
    }
    CredentialsAdapter ..> cl.ucn.ingsoftware.taller2.taller2.authenticate.Credentials
    CredentialsAdapter ..|> JsonSerializer

    class CreditCardAdapter {
        +serialize(CreditCard creditCard, Type type, JsonSerializationContext jsonSerializationContext): JsonElement
    }
    CreditCardAdapter ..> cl.ucn.ingsoftware.taller2.taller2.model.CreditCard
    CreditCardAdapter ..|> JsonSerializer

    class PaymentAdapter {
        -creditCardJsonSerializer: JsonSerializer<CreditCard>
        +PaymentAdapter(JsonSerializer<CreditCard> creditCardJsonSerializer)
        +serialize(Payment payment, Type, type, JsonSerializationContext jsonSerializationContext): JsonElement
    }
    PaymentAdapter ..> cl.ucn.ingsoftware.taller2.taller2.model.CreditCard
    PaymentAdapter ..> cl.ucn.ingsoftware.taller2.taller2.model.Payment
    PaymentAdapter..|> JsonSerializer

    interface JsonDeserializer

    class ServiceDeserializer {
        +deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext jsonDeserializationContext): Service
    }
    ServiceDeserializer ..> cl.ucn.ingsoftware.taller2.taller2.model.Service
    ServiceDeserializer ..|> JsonDeserializer

    class TokenAdapter{
        +deserialize(JsonElement jsonElement, Type type,JsonDeserializationContext jsonDeserializationContext): ObjectToken
    }
    TokenAdapter ..> cl.ucn.ingsoftware.taller2.taller2.model.ObjectToken
    TokenAdapter ..|> JsonDeserializer

    class UserDeserializer{
        +deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext jsonDeserializationContext): User
    }
    UserDeserializer ..> cl.ucn.ingsoftware.taller2.taller2.model.RolType
    UserDeserializer ..> cl.ucn.ingsoftware.taller2.taller2.model.User
    UserDeserializer ..|> JsonDeserializer
}

package cl.ucn.ingsoftware.taller2.taller2.authenticate {
    class AuthenticationResponse {
        -user: User
        -response: StatusAuthenticationResponse
        -AuthenticationResponse(User user, StatusAuthenticationResponse response)
        +getUser(): User
        +getResponse(): StatusAuthenticationResponse
        +isFailed(): boolean
        +{static} failed(): AuthenticationResponse
        +{static} successful(User user): AuthenticationResponse
    }
    AuthenticationResponse ..> cl.ucn.ingsoftware.taller2.taller2.model.User

    interface Authenticator {
        +AuthenticationResponse authenticate(Credentials credentials);
    }

    interface AuthenticatorFactory {
        +Authenticator get(AuthenticatorType type);
    }

    enum AuthenticatorType {
        BASIC
        DATABASE
    }

    class BasicAuthenticator {
        -userService: UserService
        +BasicAuthenticator(UserService userService)
        +authenticate(Credentials credentials): AuthenticationResponse
    }
    BasicAuthenticator ..> cl.ucn.ingsoftware.taller2.taller2.model.User
    BasicAuthenticator ..> cl.ucn.ingsoftware.taller2.taller2.service.UserService
    BasicAuthenticator ..|> Authenticator

    class Credentials {
        -identifier: String
        -password: String
        +Credentials(String identifier, String password)
        +getIdentifier(): String
        +GetPassword(): String
    }

    class DefaultAuthenticatorFactory {
        -userService: UserService
        +DefaultAuthenticatorFactory(UserService userService)
        +get(AuthenticatorType type): Authenticator
    }
    DefaultAuthenticatorFactory ..> cl.ucn.ingsoftware.taller2.taller2.service.UserService
    DefaultAuthenticatorFactory ..|> AuthenticatorFactory

    enum StatusAuthenticationResponse {
        FAILED
        SUCCESSFUL
    }
}

package cl.ucn.ingsoftware.taller2.taller2.buy {
    interface ServicesBuyObserver {}
    class ShoppingBasket {}
}

package cl.ucn.ingsoftware.taller2.taller2.buy.observers {
    class AccumulatePointServiceBuyObserver {}
    class CreatePurchaseBuyObserver {}
}

package cl.ucn.ingsoftware.taller2.taller2.confirmation {
    interface ActionConfirmationExecutor {}
    class AlertConfirmation {}
}

package cl.ucn.ingsoftware.taller2.taller2.controllers {
    class AuthenticationController {}
    class BuyGiftCardController {}
    class CreditCardController {}
    class HandleServicesController {}
    class HelloController {}
    class PayPointsController {}
    class RegisterSessionController {}
    class VoucherController {}
}

package cl.ucn.ingsoftware.taller2.taller2.http {
    class HttpWrapperBuilder {}
}

package cl.ucn.ingsoftware.taller2.taller2.loader {
    class CreditCardServiceLoader {}
    interface Loader {}
    class MainLoader {}
    class SceneLoader {}
    class ServiceLoader {}
    class UserLoader {}
}

package cl.ucn.ingsoftware.taller2.taller2.model {
    class CreditCard {}
    class ObjectToken {}
    class Payment {}
    class Purchase {}
    class RolType {}
    class Service {}
    class User {}
    class Voucher {}
}

package cl.ucn.ingsoftware.taller2.taller2.register {
    class BasicRegisterService {}
    interface RegisterService {}
    class StatusRegister {}
}

package cl.ucn.ingsoftware.taller2.taller2.screen {
    class ScreenHandler {}
    class ScreenModel {}
}

package cl.ucn.ingsoftware.taller2.taller2.service {
    interface CreditCardService {}
    class HttpCreditCardService {}
    interface RecentPurchaseService {}
    class RecentPurchaseServiceImpl {}
    class ServiceRegistryImpl {}
    interface ServicesRegistry {}
    interface SessionService {}
    class SessionServiceImpl {}
    interface ShoppingBasketService {}
    class ShoppingBasketServiceImpl {}
    interface UserService {}
    class UserServiceImpl {}
}

package cl.ucn.ingsoftware.taller2.taller2.shutdown {
    class MainShutdown {}
    class ServiceShutdown {}
    interface Shutdown {}
    class UserShutdown {}
}

package cl.ucn.ingsoftware.taller2.taller2.util {
    class AlertMessage {}
    class ConditionalsAlert {}
    class DateConversionApplier {}
    class DateProvider {}
    class DefaultReader {}
    class Identifiers {}
    interface Reader {}
    class ReaderUtil {}
    class StringReaderAdapter{}
    enum UnitTime {}
}

package cl.ucn.ingsoftware.taller2.taller2.validate {
    class AbstractFormFieldValidatorDecorator
    class BasicFormFieldValidator
    interface FormFieldValidator
}

package cl.ucn.ingsoftware.taller2.taller2.validate.decorators {
    class EqualsPasswordFieldValidatorDecorator {}
    class MailFieldValidatorDecorator {}
    class MailIncorrectFieldValidatorDecorator {}
    class MoneyFieldValidatorDecorator {}
    class RangeFormFieldValidatorDecorator {}
}
@enduml