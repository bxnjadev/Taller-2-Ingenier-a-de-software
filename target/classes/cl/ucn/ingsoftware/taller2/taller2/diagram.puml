@startuml
left to right direction
skin rose

package cl.ucn.ingsoftware.taller2.taller2 {
    class MainApplication {
      +start(Stage stage): void
      +{static} main(String[] args): void
    }
    MainApplication "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.loader
    MainApplication "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service
    MainApplication "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    class Application
    MainApplication --|> Application
}

package cl.ucn.ingsoftware.taller2.taller2.adapter {
    interface JsonSerializer

    class CredentialsAdapter {
        +serialize(Credentials credentials, Type type, JsonSerializationContext jsonSerializationContext): JsonElement
    }
    CredentialsAdapter "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.authenticate.Credentials
    CredentialsAdapter ..|> JsonSerializer

    class CreditCardAdapter {
        +serialize(CreditCard creditCard, Type type, JsonSerializationContext jsonSerializationContext): JsonElement
    }
    CreditCardAdapter "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.CreditCard
    CreditCardAdapter ..|> JsonSerializer

    class PaymentAdapter {
        -creditCardJsonSerializer: JsonSerializer<CreditCard>
        +PaymentAdapter(JsonSerializer<CreditCard> creditCardJsonSerializer)
        +serialize(Payment payment, Type, type, JsonSerializationContext jsonSerializationContext): JsonElement
    }
    PaymentAdapter "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.CreditCard
    PaymentAdapter "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Payment
    PaymentAdapter..|> JsonSerializer

    interface JsonDeserializer

    class ServiceDeserializer {
        +deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext jsonDeserializationContext): Service
    }
    ServiceDeserializer "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Service
    ServiceDeserializer ..|> JsonDeserializer

    class TokenAdapter{
        +deserialize(JsonElement jsonElement, Type type,JsonDeserializationContext jsonDeserializationContext): ObjectToken
    }
    TokenAdapter "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.ObjectToken
    TokenAdapter ..|> JsonDeserializer

    class UserDeserializer{
        +deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext jsonDeserializationContext): User
    }
    UserDeserializer "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.RolType
    UserDeserializer "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    UserDeserializer ..|> JsonDeserializer
}

package cl.ucn.ingsoftware.taller2.taller2.authenticate {
    class AuthenticationResponse {
        -user: User
        -response: StatusAuthenticationResponse
        -AuthenticationResponse(User user, StatusAuthenticationResponse response)
        +getUser(): User
        +getResponse(): StatusAuthenticationResponse
        +isFailed(): boolean
        +{static} failed(): AuthenticationResponse
        +{static} successful(User user): AuthenticationResponse
    }
    AuthenticationResponse "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User

    interface Authenticator {
        +AuthenticationResponse authenticate(Credentials credentials);
    }

    interface AuthenticatorFactory {
        +Authenticator get(AuthenticatorType type);
    }

    enum AuthenticatorType {
        BASIC
        DATABASE
    }
    AuthenticatorType "1" --> "1" AuthenticatorFactory

    class BasicAuthenticator {
        -userService: UserService
        +BasicAuthenticator(UserService userService)
        +authenticate(Credentials credentials): AuthenticationResponse
    }
    BasicAuthenticator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    BasicAuthenticator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.UserService
    BasicAuthenticator ..|> Authenticator

    class Credentials {
        -identifier: String
        -password: String
        +Credentials(String identifier, String password)
        +getIdentifier(): String
        +GetPassword(): String
    }

    class DefaultAuthenticatorFactory {
        -userService: UserService
        +DefaultAuthenticatorFactory(UserService userService)
        +get(AuthenticatorType type): Authenticator
    }
    DefaultAuthenticatorFactory "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.UserService
    DefaultAuthenticatorFactory ..|> AuthenticatorFactory

    enum StatusAuthenticationResponse {
        FAILED
        SUCCESSFUL
    }
    StatusAuthenticationResponse "1" --> "1" AuthenticationResponse
}

package cl.ucn.ingsoftware.taller2.taller2.buy {
    interface ServicesBuyObserver {
        +buy(ShoppingBasket shoppingBasket): void
    }

    class ShoppingBasket {
        -observers Set<ServicesBuyObserver>
        -services Set<Service>
        -user User
        +ShoppingBasket(User user)
        +addService(Service service): void
        +removeService(Service service): void
        +clear(): void
        +getServices(): Set<Service>
        +getUser(): User
        +calculatePrice(): double
        +notifyBought(): void
    }
    ShoppingBasket "1" --> "1..*" cl.ucn.ingsoftware.taller2.taller2.buy.observers.CreatePurchaseBuyObserver
    ShoppingBasket "1" --> "0..*" cl.ucn.ingsoftware.taller2.taller2.model.Service
    ShoppingBasket "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
}

package cl.ucn.ingsoftware.taller2.taller2.buy.observers {
    class AccumulatePointServiceBuyObserver {
        -{static} PERCENTAGE: double
        +buy(ShoppingBasket shoppingBasket): void
    }
    AccumulatePointServiceBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.buy.ServicesBuyObserver
    AccumulatePointServiceBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.buy.ShoppingBasket
    AccumulatePointServiceBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    AccumulatePointServiceBuyObserver ..|> ServicesBuyObserver

    class CreatePurchaseBuyObserver {
        -{static} FORMAT_TIME: String
        -{static} NEW_LINE: String
        -dateProvider: DateProvider
        -recentPurchaseService: RecentPurchaseService
        +CreatePurchaseBuyObserver()
        +buy(ShoppingBasket shoppingBasket): void
        -convertServicesToListString(Collection<Service> services): Set<String>
    }
    CreatePurchaseBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.buy.ServicesBuyObserver
    CreatePurchaseBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.buy.ShoppingBasket
    CreatePurchaseBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Purchase
    CreatePurchaseBuyObserver "1" --> "1..*" cl.ucn.ingsoftware.taller2.taller2.model.Service
    CreatePurchaseBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.RecentPurchaseService
    CreatePurchaseBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.DateConversionApplier
    CreatePurchaseBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.DateProvider
    CreatePurchaseBuyObserver "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.Identifiers
    CreatePurchaseBuyObserver ..|> ServicesBuyObserver
}

package cl.ucn.ingsoftware.taller2.taller2.confirmation {
    interface ActionConfirmationExecutor {
        +execute(): void
    }
    class AlertConfirmation {
        -alert: Alert
        -actionConfirmationExecutor: ActionConfirmationExecutor
        +AlertConfirmation(ActionConfirmationExecutor actionConfirmationExecutor)
        +configure(): void
        +showAndWait(): void
        +{static} createAndShow(ActionConfirmationExecutor actionConfirmationExecutor): AlertConfirmation
    }
    AlertConfirmation "1" ..> "1" ActionConfirmationExecutor : uses
}

package cl.ucn.ingsoftware.taller2.taller2.controllers {
    class AuthenticationController {
        -button: Button
        -mail: TextField
        -password: TextField
        -formFieldValidator: FormFieldValidator
        -authenticator: Authenticator
        -screenHandler: ScreenHandler
        -sessionService: SessionService
        +AuthenticationController()
        +clickHyperLink(ActionEvent event): void
        +handleLogin(ActionEvent event): void
        +onExit(ActionEvent event): void
    }
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.authenticate
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.RolType
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.SessionService
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.UserService
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.AlertMessage
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.BasicFormFieldValidator
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    AuthenticationController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.decorators.MailIncorrectFieldValidatorDecorator

    interface Initializable

    class BuyGiftCardController {
        -{static} MIN_VALUE: double
        -servicesRegistry: ServicesRegistry
        -shoppingBasketService: ShoppingBasketService
        -screenHandler: ScreenHandler
        -listview: ListView<String>
        -priceField: TextField
        -shoppingBasket: ShoppingBasket
        +initialize(URL url, ResourceBundle resourceBundle): void
        +onExit(ActionEvent event): void
        +checkAmountAndShow(): boolean
        +payCreditCard(ActionEvent event): void
        +payPoints(ActionEvent event): void
    }
    BuyGiftCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.buy.ShoppingBasket
    BuyGiftCardController "1" --> "1..*" cl.ucn.ingsoftware.taller2.taller2.model.Service
    BuyGiftCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    BuyGiftCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    BuyGiftCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.ServicesRegistry
    BuyGiftCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.SessionService
    BuyGiftCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.ShoppingBasketService
    BuyGiftCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.AlertMessage
    BuyGiftCardController ..|> Initializable

    class CreditCardController {
        -creditCardService: CreditCardService
        -shoppingBasketService: ShoppingBasketService
        -sessionService: SessionService
        -screenHandler: ScreenHandler
        -formFieldValidator: FormFieldValidator
        -creditCardNumber: TextField
        -dateExpireMonth: TextField
        -dateExpireYear: TextField
        -cvc:TextField
        +CreditCardController()
        +pay(ActionEvent event): void
    }
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.CredentialsAdapter
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.CreditCardAdapter
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.PaymentAdapter
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.TokenAdapter
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.authenticate.Credentials
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.buy.ShoppingBasket
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.CreditCard
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.ObjectToken
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Payment
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.CreditCardService
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.SessionService
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.ShoppingBasketService
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.AlertMessage
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.BasicFormFieldValidator
    CreditCardController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator

    class HandleServicesController {
        -columnName: TableColumn<Service, String>
        -columnPrice:TableColumn<Service, String>
        -table: TableView<Service>
        -formFieldValidator: FormFieldValidator
        -servicesRegistry: ServicesRegistry
        -sessionService: SessionService
        -screenHandler: ScreenHandler
        -serviceField: TextField
        -priceField: TextField
        +HandleServicesController()
        +onAdd(): void
        +onRemove(): void
        +initialize(URL url, ResourceBundle resourceBundle): void
        -clear(TextField... textFields): void
        +onExit(ActionEvent event):void
        +onEdit(): void
    }
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.confirmation.AlertConfirmation
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Service
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.ServicesRegistry
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.SessionService
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.AlertMessage
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.BasicFormFieldValidator
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    HandleServicesController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.decorators.MoneyFieldValidatorDecorator
    HandleServicesController ..|> Initializable

    class PayPointsController {
        -sessionService: SessionService
        -shoppingBasketService: ShoppingBasketService
        -screenHandler: ScreenHandler
        -formFieldValidator: FormFieldValidator
        -pointField: TextField
        +PayPointsController()
        +pay(ActionEvent event): void
        +initialize(URL url, ResourceBundle resourceBundle): void
    }
    PayPointsController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.buy.ShoppingBasket
    PayPointsController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    PayPointsController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    PayPointsController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.SessionService
    PayPointsController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.ShoppingBasketService
    PayPointsController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.BasicFormFieldValidator
    PayPointsController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    PayPointsController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.decorators.PointsValidatorDecorator
    PayPointsController ..|> Initializable

    class RegisterSessionController {
        -{static} DEFAULT_ROL: RolType
        -userService: UserService
        -screenHandler: ScreenHandler
        -name: TextField
        -age: TextField
        -mail: TextField
        -passwordField: TextField
        -passwordRepeatField: TextField
        -button: Button
        +RegisterSessionController()
        +handleRegister(ActionEvent event): void
        +loginHyperLink(ActionEvent event): void
    }
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.RolType
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.register.RegisterService
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.register.StatusRegister
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.UserService
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.BasicFormFieldValidator
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.decorators.EqualsPasswordFieldValidatorDecorator
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.decorators.MailFieldValidatorDecorator
    RegisterSessionController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.decorators.RangeFormFieldValidatorDecorator

    class VoucherController {
        -recentPurchaseService: RecentPurchaseService
        -screenHandler: ScreenHandler
        -date: Label
        -dateExpiration: Label
        -code: Label
        -services: ListView<String>
        +initialize(URL url, ResourceBundle resourceBundle): void
        +retry(ActionEvent event): void
    }
    VoucherController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Purchase
    VoucherController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    VoucherController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    VoucherController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.RecentPurchaseService
    VoucherController "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.SessionService
    VoucherController ..|> Initializable
}

package cl.ucn.ingsoftware.taller2.taller2.http {
    class HttpWrapperBuilder {
        -httpRequestBuilder: HttpRequest.Builder
        -client: HttpClient
        -clazz: Class<T>
        -gson: Gson
        -body: String
        +HttpWrapperBuilder(Class<T> clazz, HttpClient client, Gson gson)
        +url(String url): HttpWrapperBuilder<T>
        +authenticationBearerToken(String token): HttpWrapperBuilder<T>
        +applicationJson(): HttpWrapperBuilder<T>
        +body(V v): <V> HttpWrapperBuilder<T>
        +post(): HttpWrapperBuilder<T>
        +get(): HttpWrapperBuilder<T>
        +build(): T
    }

}

package cl.ucn.ingsoftware.taller2.taller2.loader {
    class CreditCardServiceLoader {
        -{static} USERNAME: String
        -{static} PASSWORD: String
        -creditCardService: creditCardService
        +CreditCardServiceLoader(CreditCardService creditCardService)
        +load(): void
    }
    CreditCardServiceLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.authenticate.Credentials
    CreditCardServiceLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.CreditCardService
    CreditCardServiceLoader ..|> Loader

    interface Loader {
        +load(): void
    }
    class MainLoader {
        -loaders: Set<Loader>
        +MainLoader()
        +addAll(Loader... loadersCollection): void
        +load(): void
    }
    MainLoader ..|> Loader

    class SceneLoader {
        +SceneLoader(Stage stage)
    }
    SceneLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.MainApplication
    SceneLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.screen.ScreenHandler
    SceneLoader ..|> Loader

    class ServiceLoader {
        -servicesRegistry: ServicesRegistry
        -{static} FILE_NAME: String
        -{static} GSON: Gson
        +ServiceLoader(ServicesRegistry servicesRegistry)
        +load(): void
        -fill(Service[] services): void
    }
    ServiceLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.ServiceDeserializer
    ServiceLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Service
    ServiceLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.ServicesRegistry
    ServiceLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.Reader
    ServiceLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.ReaderUtil
    ServiceLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.StringReaderAdapter
    ServiceLoader ..|> Loader

    class UserLoader {
        -{static} FILE_NAME: String
        -{static} GSON: Gson
        -userService: UserService
        +UserLoader(UserService userService)
        +load(): void
        -addUsers(User[] users, UserService userService): void
    }
    UserLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.UserDeserializer
    UserLoader "1" --> "1..*" cl.ucn.ingsoftware.taller2.taller2.model.User
    UserLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.UserService
    UserLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.Reader
    UserLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.ReaderUtil
    UserLoader "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.StringReaderAdapter
    UserLoader ..|> Loader
}

package cl.ucn.ingsoftware.taller2.taller2.model {
    class CreditCard {
        -number: String
        -month: int
        -year: int
        -code: String
        +CreditCard(String number, int month, int year, String code)
        +getNumber(): String
        +getMonth(): int
        +getCode(): String
        +getYear(): int
    }

    class ObjectToken {
        -token: String
        +ObjectToken(String token)
        +getToken(): String
    }

    class Payment {
        -creditCard: CreditCard
        -description: String
        -amount: int
        +Payment(CreditCard creditCard, String description, int amount)
        +getCreditCard(): CreditCard
        +getDescription(): String
        +getAmount(): int
    }

    class Purchase {
        -code: int
        -date: String
        -expireDate: String
        -servicesName: Set<String>
        +Purchase(int code, String date, String expireDate, Set<String> servicesName)
        +getCode(): int
        +getDate(): String
        +getExpireDate(): String
        +servicesName(): Set<String>
    }

    enum RolType {
        USER
        ADMINISTRATOR
    }

    class Service {
        -name: String
        -price: int
        +Service(String name, int price)
        +getName(): String
        +getPrice(): int
        +setPrice(int price): void
    }

    class User {
        -name: String
        -age: int
        -mail: String
        -password: String
        -rolType: RolType
        -points: int
        +User(String name, int age, String mail, String password, RolType rolType, int points)
        +getName(): String
        +getAge(): int
        +getMail(): String
        +getPassword(): String
        +getRolType(): RolType
        +getPoints(): int
        +addPoints(int points): void
        +removePoints(int points): void
        +setPoints(int points): void
    }

    class Voucher {
        -id: String
        -date: String
        -expiredDate: String
        -services: List<String>
        +Voucher(String id, String date, String expireDate, List<String> services)
        +getId(): String
        +getDate(): String
        +getExpireDate(): String
        +getServices(): List<String>
    }
}

package cl.ucn.ingsoftware.taller2.taller2.register {
    class BasicRegisterService {
        -{static}REGISTER_SERVICE: RegisterService
        -userService: UserService
        +BasicRegisterService(UserService userService)
        +register(String name, int age, String mail, String password, String repeatPassword, RolType rolType): StatusRegister
        +{static}getInstance(UserService userService): RegisterService
    }
    BasicRegisterService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.RolType
    BasicRegisterService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    BasicRegisterService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.UserService
    BasicRegisterService ..|> RegisterService

    interface RegisterService {
        +register(String name, int age, String mail, String password, String repeatPassword, RolType rolType): StatusRegister
        +{static}getInstance(UserService userService):RegisterService
    }
    RegisterService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.RolType
    RegisterService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.UserService

    enum StatusRegister {
        OK
        ERROR
    }
}

package cl.ucn.ingsoftware.taller2.taller2.screen {
    class ScreenHandler {
        -{static}SCREEN_HANDLER: ScreenHandler
        -ScreenHandler()
        +show(String name, String title): void
        +{static}getInstance(): ScreenHandler
    }
    ScreenHandler "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.MainApplication
}

package cl.ucn.ingsoftware.taller2.taller2.service {
    interface CreditCardService {
        +authenticate(Credentials credentials): void
        +validate(CreditCard creditCard): boolean
        +getBalance(CreditCard creditCard): double
        +isAuthenticated(): boolean
        +pay(CreditCard creditCard, String description, int amount): boolean
        +{static}http(): CreditCardService
    }
    CreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.authenticate.Credentials
    CreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.CreditCard

    class HttpCreditCardService {
        -{static}HTTP_CREDIT_CARD_SERVICE: CreditCardService
        -CREDIT_CARD_VALIDATE: Map<String, Boolean>
        -UPDATE_MONEY: Map<String, Boolean>
        -{static} BASE_URL: String
        -httpClient: HttpClient
        -token: String
        -HttpCreditCardService()
        +authenticate(Credentials credentials): void
        +validate(CreditCard creditCard): boolean
        +getBalance(CreditCard creditCard): double
        +isAuthenticated(): boolean
        +pay(CreditCard creditCard, String description, int amount): boolean
        +{static}getInstance(): CreditCardService
    }
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.CredentialsAdapter
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.CreditCardAdapter
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.PaymentAdapter
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.adapter.TokenAdapter
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.authenticate.Credentials
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.http.HttpWrapperBuilder
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.CreditCard
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.ObjectToken
    HttpCreditCardService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Payment
    HttpCreditCardService ..|> CreditCardService

    interface RecentPurchaseService {
        +register(User user, Purchase purchase): void
        +find(User user): Purchase
        +delete(User user): void
        +{static}getInstance(): RecentPurchaseService
    }
    RecentPurchaseService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Purchase
    RecentPurchaseService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User

    class RecentPurchaseServiceImpl {
        -{static}RECENT_PURCHASE_SERVICE: RecentPurchaseService
        -purchasesRecent: Map<String, Purchase>
        +register(User user, Purchase purchase): void
        +find(User user): Purchase
        +delete(User user): void
        +{static}getInstance():RecentPurchaseService
    }
    RecentPurchaseServiceImpl "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Purchase
    RecentPurchaseServiceImpl "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    RecentPurchaseServiceImpl ..|> RecentPurchaseService

    class ServiceRegistryImpl {
        -services: Map<String, Service>
        -{static}SERVICES_REGISTRY: ServicesRegistry
        -ServiceRegistryImpl()
        +add(Service service): void
        +delete(String service): void
        +exists(String service): boolean
        +find(String service): Service
        +all(): Collection<Service>
        +{static}getInstance(): ServicesRegistry
    }
    ServiceRegistryImpl "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.Service
    ServiceRegistryImpl ..|> ServicesRegistry

    interface ServicesRegistry {
        +add(Service service): void
        +delete(String service): void
        +exists(String service): boolean
        +find(String service): Service
        +all(): Collection<Service>
        +{static}getServicesRegistry(): ServicesRegistry
    }
    ServicesRegistry "1" -> "1..*" cl.ucn.ingsoftware.taller2.taller2.model.Service

    interface SessionService {
        +newSession(user user): void
        +getSession(): User
        +close(): void
        +{static}getInstance(): SessionService
    }
    SessionService "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User

    class SessionServiceImpl {
        -{static}SESSION_SERVICE: SessionService
        -userLogger: User
        +newSession(User user): void
        +getSession(): User
        +close(): void
        +{static}getInstance(): SessionService
    }
    ServiceRegistryImpl "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    ServiceRegistryImpl ..|> SessionService

    interface ShoppingBasketService {
        +add(String username, ShoppingBasket shoppingBasket): void
        +remove(String username): void
        +find(String username): ShoppingBasket
        +{static}getInstance(): ShoppingBasketService
    }
    ShoppingBasketService "1" --> "1..*" cl.ucn.ingsoftware.taller2.taller2.buy.ShoppingBasket

    class ShoppingBasketServiceImpl {
        -{static}SHOPPING_BASKET_SERVICE: ShoppingBasketService
        -baskets: Map<String, ShoppingBasket>
        +add(String username, ShoppingBasket shoppingBasket): void
        +remove(String username): void
        +find(String username): ShoppingBasket
        +{static}getInstance(): ShoppingBasketService
    }
    ShoppingBasketServiceImpl "1" --> "1..*" cl.ucn.ingsoftware.taller2.taller2.buy.ShoppingBasket
    ShoppingBasketServiceImpl ..|> ShoppingBasketService

    interface UserService {
        +find(String name): User
        +findByMail(String mail): User
        +register(User user): void
        +exists(String name): boolean
        +all(): Collection<User>
        +{static}getInstance(): UserService
    }
    UserService "1" --> "1..*" cl.ucn.ingsoftware.taller2.taller2.model.User

    class UserServiceImpl {
        -{static}USER_SERVICE: UserService
        -users: Map<String, User>
        -usersMail: Map<String, User>
        -UserServiceImpl()
        +find(String name): User
        +findByMail(String mail): User
        +register(User user): void
        +all(): Collection<User>
        +{static}getService(): UserService
    }
    UserServiceImpl "1" --> "1..*" cl.ucn.ingsoftware.taller2.taller2.model.User
    UserServiceImpl ..|> UserService
}

package cl.ucn.ingsoftware.taller2.taller2.util {
    class AlertMessage {
        +{static}show(Alert.AlertType alertType, String title, String message): void
    }

    class ConditionalsAlert {
        -{static}ALERT_ERROR: Alert.AlertType
        -ConditionalsAlert()
        +{static}checkIfEmptyAndShow(String errorMessage, TextField... fields): boolean
        +{static}executeAndShowIfThrow(Runnable runnable, String errorMessage): boolean
        +{static}checkAndShow(boolean condition, String errorMessage): boolean
    }

    class DateConversionApplier {
        -{static}MONTH_TO_MILLISECONDS: long
        -DateConversionApplier()
        +{static}monthToMilliseconds(int months): long
    }

    class DateProvider {
        -simpleDateFormat: SimpleDateFormat
        +DateProvider(String format)
        +provide(): String
        +provide(long time): String
        +{static}format(String format): DateProvider
    }

    class DefaultReader {
        -bufferedReader: BufferedReader
        +DefaultReader(InputStream inputStream)
        +readLine(): String
        +close(): void
    }
    DefaultReader ..|> Reader

    class Identifiers {
        -{static}DEFAULT_LENGTH: int
        -{static}RANDOM: Random
        -Identifiers()
        +{static}newId(int length): int
        +{static}newId(): int
    }

    interface Reader {
        +readLine(): String
        +close(): void
    }
    class AutoCloseable
    Reader --|> AutoCloseable

    class ReaderUtil {
        -ReaderUtil()
        +{static}readAllAsString(Reader reader): String
    }

    class StringReaderAdapter{
        -reader: Reader
        +StringReaderAdapter(String fileName)
        +readLine(): String
        +close(): void
    }
    StringReaderAdapter "1" ..> "1" cl.ucn.ingsoftware.taller2.taller2.MainApplication
    StringReaderAdapter ..|> Reader
}

package cl.ucn.ingsoftware.taller2.taller2.validate {
    abstract class AbstractFormFieldValidatorDecorator {
        #formFieldValidator: FormFieldValidator
        +AbstractFormFieldValidatorDecorator(FormFieldValidator formFieldValidator)
    }
    AbstractFormFieldValidatorDecorator ..|> FormFieldValidator

    class BasicFormFieldValidator {
        -{static}TEXT_FIELDS: TextField[]
        +validate(Map<String, TextField> fields): boolean
    }
    BasicFormFieldValidator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.ConditionalsAlert
    BasicFormFieldValidator ..|> FormFieldValidator

    interface FormFieldValidator {
        +validate(Map<String, TextField> fields): boolean
    }
}

package cl.ucn.ingsoftware.taller2.taller2.validate.decorators {
    class EqualsPasswordFieldValidatorDecorator {
        +EqualsPasswordFieldValidatorDecorator(FormFieldValidator formFieldValidator)
        +validate(Map<String, TextField> fields): boolean
    }
    EqualsPasswordFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.ConditionalsAlert
    EqualsPasswordFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.AbstractFormFieldValidatorDecorator
    EqualsPasswordFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    EqualsPasswordFieldValidatorDecorator --|> AbstractFormFieldValidatorDecorator

    class MailFieldValidatorDecorator {
        -userService: UserService
        +MailFieldValidatorDecorator(FormFieldValidator formFieldValidator, UserService userService)
        +validate(Map<String, TextField> fields): boolean
    }
    MailFieldValidatorDecorator --|> AbstractFormFieldValidatorDecorator

    class MailIncorrectFieldValidatorDecorator {
        -userService: UserService
        +MailIncorrectFieldValidatorDecorator(FormFieldValidator formFieldValidator, UserService userService)
        +validate(Map<String, TextField> fields): boolean
    }
    MailIncorrectFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.service.UserService
    MailIncorrectFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.ConditionalsAlert
    MailIncorrectFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.AbstractFormFieldValidatorDecorator
    MailIncorrectFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    MailIncorrectFieldValidatorDecorator --|> AbstractFormFieldValidatorDecorator

    class MoneyFieldValidatorDecorator {
        +MoneyFieldValidatorDecorator(FormFieldValidator formFieldValidator)
        +validate(Map<String, TextField> fields): boolean
    }
    MoneyFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.ConditionalsAlert
    MoneyFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.AbstractFormFieldValidatorDecorator
    MoneyFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    MoneyFieldValidatorDecorator --|> AbstractFormFieldValidatorDecorator

    class PointsValidatorDecorator {
        -shoppingBasket: ShoppingBasket
        -user: User
        +PointsValidatorDecorator(FormFieldValidator formFieldValidator, ShoppingBasket shoppingBasket, User user)
        +validate(Map<String, TextField> fields): boolean
    }
    PointsValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.buy.ShoppingBasket
    PointsValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.model.User
    PointsValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.ConditionalsAlert
    PointsValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.AbstractFormFieldValidatorDecorator
    PointsValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    PointsValidatorDecorator ..|> AbstractFormFieldValidatorDecorator

    class RangeFormFieldValidatorDecorator {
        -{static}MIN_AGE: int
        -{static}MAX_AGE: int
        +RangeFormFieldValidatorDecorator(FormFieldValidator formFieldValidator)
        +validate(Map<String, TextField> fields): boolean
    }
    RangeFormFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.util.ConditionalsAlert
    RangeFormFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.AbstractFormFieldValidatorDecorator
    RangeFormFieldValidatorDecorator "1" --> "1" cl.ucn.ingsoftware.taller2.taller2.validate.FormFieldValidator
    RangeFormFieldValidatorDecorator --|> AbstractFormFieldValidatorDecorator
}
@enduml